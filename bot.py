import os
from aiogram import Bot, Dispatcher, F
from aiogram.types import FSInputFile, Message, ContentType
from aiogram.enums import ParseMode
from aiogram.filters import Command
from config import BOT_TOKEN
from video_utils import convert_to_circle
from aiogram.client.default import DefaultBotProperties
from aiogram.client.session.aiohttp import AiohttpSession

import asyncio

bot = Bot(
    token=BOT_TOKEN,
    session=AiohttpSession(),
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)
dp = Dispatcher()

@dp.message(Command("start"))
async def cmd_start(message: Message):
    welcome_text = (
        "<b>–ü—Ä–∏–≤–µ—Ç! üëã</b>\n\n"
        "–Ø ‚Äî –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —Ç–≤–æ–µ –≤–∏–¥–µ–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º-–∫—Ä—É–∂–æ–∫ üé•.\n\n"
        "<b>–ü—Ä–∞–≤–∏–ª–∞:</b>\n"
        "‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å ‚Äî <b>60 —Å–µ–∫—É–Ω–¥</b>\n"
        "‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ ‚Äî <b>20–ú–ë</b>\n"
        "‚Ä¢ –í–∏–¥–µ–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ <i>mp4</i>"
    )
    await message.answer(welcome_text)

@dp.message(F.content_type == ContentType.VIDEO)
async def handle_video(message: Message, bot: Bot):
    max_size_bytes = 20 * 1024 * 1024  # 20 MB

    # ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –î–û —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    if message.video.file_size and message.video.file_size > max_size_bytes:
        await message.answer("‚ö†Ô∏è –í–∏–¥–µ–æ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ –¥–ª—è –∫—Ä—É–∂–∫–∞ (–º–∞–∫—Å–∏–º—É–º 20MB). –û—Ç–ø—Ä–∞–≤—å —Ñ–∞–π–ª –ø–æ–º–µ–Ω—å—à–µ.")
        return

    await message.answer("–í–∏–¥–µ–æ –ø–æ–ª—É—á–µ–Ω–æ. –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é –≤ –∫—Ä—É–∂–æ–∫...")

    # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    file = await bot.get_file(message.video.file_id)
    file_path = file.file_path
    downloaded_file = await bot.download_file(file_path)

    input_file_path = f"temp_{message.from_user.id}.mp4"
    with open(input_file_path, "wb") as f:
        f.write(downloaded_file.read())

    # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è
    output_file_path = convert_to_circle(input_file_path)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫—Ä—É–∂–∫–∞
    video_note = FSInputFile(output_file_path)
    await message.answer_video_note(video_note)

    # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    os.remove(input_file_path)
    os.remove(output_file_path)

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())